apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flask-aws-monitor.fullname" . }}
  labels:
    {{- include "flask-aws-monitor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    {{- if eq .Values.deployment.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "flask-aws-monitor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # Force pod restart on configmap/secret changes
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "flask-aws-monitor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "flask-aws-monitor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.deployment.container.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "flask-aws-monitor.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.container.port }}
              protocol: TCP
          env:
            # Static environment variables
            {{- range $key, $value := .Values.deployment.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # AWS Credentials from Secret
            {{- if .Values.deployment.awsCredentials.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "flask-aws-monitor.secretName" . }}
                  key: aws-access-key-id
                  optional: false
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "flask-aws-monitor.secretName" . }}
                  key: aws-secret-access-key
                  optional: false
            {{- end }}
          {{- if .Values.healthCheck.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.liveness.path }}
              port: {{ .Values.healthCheck.liveness.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.healthCheck.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.liveness.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.liveness.successThreshold }}
          {{- end }}
          {{- if .Values.healthCheck.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.readiness.path }}
              port: {{ .Values.healthCheck.readiness.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.healthCheck.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.readiness.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.readiness.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.configMap.enabled }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
          {{- end }}
      {{- if .Values.configMap.enabled }}
      volumes:
        - name: config
          configMap:
            name: {{ include "flask-aws-monitor.fullname" . }}-config
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
